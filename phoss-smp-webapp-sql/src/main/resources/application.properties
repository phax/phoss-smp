#
# Copyright (C) 2014-2025 Philip Helger and contributors
# philip[at]helger[dot]com
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Global flags for initializer
# For production debug should be false and production should be true
global.debug = false
global.production = false
global.debugjaxws = false

## Directory client

pdclient.keystore.type         = ${smp.keystore.type}
pdclient.keystore.path         = ${smp.keystore.path}
pdclient.keystore.password     = ${smp.keystore.password}
pdclient.keystore.key.alias    = ${smp.keystore.key.alias}
pdclient.keystore.key.password = ${smp.keystore.key.password}

pdclient.truststore.type     = ${smp.truststore.type}
pdclient.truststore.path     = ${smp.truststore.path}
pdclient.truststore.password = ${smp.truststore.password}

# SMP client

smpclient.truststore.type     = ${smp.truststore.type}
smpclient.truststore.path     = ${smp.truststore.path}
smpclient.truststore.password = ${smp.truststore.password}

# Central directory where the data should be stored.
# This should be an absolute path in production
# Make sure write access is granted to this directory
webapp.datapath = generated
#webapp.datapath = /var/smp

# Should all files of the application checked for readability?
# This should only be set to true when datapath is a relative directory inside a production version
webapp.checkfileaccess = false

# Is it a test version? E.g. a separate header is shown
webapp.testversion = true

# Use slow, but fancy dynamic table on the start page?
webapp.startpage.dynamictable = false

# Participant list is enabled by default
webapp.startpage.participants.none = false

# Don't show content of extensions by default on start page
webapp.startpage.extensions.show = false

# The name of the Directory implementation
webapp.directory.name = Peppol Directory

# Don't show content of extensions by default in service groups
webapp.servicegroups.extensions.show = false

# Should the error details of failed logins be shown?
webapp.security.login.errordetails = true

# Should the application name and version be shown on the /public part?
webapp.public.showappname = true

# Should the link to the source be shown on the /public part?
webapp.public.showsource = true

# Should the author be shown on the /public part?
webapp.public.showauthor = true

# Configure an imprint on the UI
webapp.imprint.enabled = false
webapp.imprint.text = Responsible person
webapp.imprint.href = https://www.google.com
webapp.imprint.target = _blank
webapp.imprint.cssclasses = mx-3 badge badge-primary

# Content Security Policy
csp.enabled = true
csp.reporting.only = false
csp.reporting.enabled = true

# The backend to be used. Can either be "sql" or "xml" or "mongodb". Any other value will result in a startup error
smp.backend = sql

## Keystore data
# The path maybe within the classpath or an absolute file path
smp.keystore.type         = jks
smp.keystore.path         = keystore/keystore.jks
smp.keystore.password     = peppol
smp.keystore.key.alias    = smp keypair
smp.keystore.key.password = peppol

# This default truststore handles the Peppol PKIs (packed into the application via peppol-commons.jar)
smp.truststore.type     = pkcs12
# For Pilot:
smp.truststore.path     = truststore/2025/smp-test-truststore.p12
# For Production:
#smp.truststore.path     = truststore/2025/smp-prod-truststore.p12
smp.truststore.password = peppol

# Force all paths (links) to be "/" instead of the context path
# This is helpful if the web application runs in a context like "/smp" but is proxied to a root path
smp.forceroot = true

# If this property is specified, it will overwrite the automatically generated URL
# for all cases where absolute URLs are necessary
# This might be helpful when running on a proxied Tomcat behind a web server
#smp.publicurl = http://smp.example.org/

# The SMP ID also used in the SML!
sml.smpid=TEST-SMP-ID1

# SML connection timeout milliseconds
#sml.connection.timeout.ms = 5000

# SML request timeout milliseconds
#sml.request.timeout.ms = 20000

# Use Peppol identifiers (with all constraints) or simple, unchecked identifiers?
# Possible values are "peppol", "simple" and "bdxr"
smp.identifiertype=peppol

# Define the type of the REST interface. Use this to switch between Peppol and BDXR
# return XMLs. Possible values are "peppol" and "bdxr"
smp.rest.type=peppol

# Log exceptions occurring in the REST API that are returned as HTTP errors?
smp.rest.log.exceptions=false

# Add payload to HTTP responses in case of REST API errors?
smp.rest.payload.on.error=true

# The time zone to be used
#smp.timezone = Europe/Vienna

# http/https Proxy settings
#http.proxyHost = 10.0.0.10
#http.proxyPort = 8080
#https.proxyHost = 10.0.0.10
#https.proxyPort = 8080
# Credentials for the proxy server (if needed)
#proxy.username =
#proxy.password =

## Required when using the SQL backend

# MySQL example
jdbc.driver = com.mysql.cj.jdbc.Driver
jdbc.url = jdbc:mysql://localhost:3306/smp?useUnicode=true&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&autoReconnect=true
jdbc.user = smp
jdbc.password = smp
jdbc.schema = smp
target-database = MySQL

# PostgreSQL example
#jdbc.driver = org.postgresql.Driver
#jdbc.url = jdbc:postgresql://localhost:5432/smp
#jdbc.user = smp
#jdbc.password = smp
#jdbc.schema = smp
#target-database = PostgreSQL

## Warn if JDBC execution time is exceeded? (since 5.0.6)
jdbc.execution-time-warning.enabled = true
jdbc.execution-time-warning.ms = 5000

#jdbc.debug.connections = false
#jdbc.debug.transactions = false
#jdbc.debug.sql = false
